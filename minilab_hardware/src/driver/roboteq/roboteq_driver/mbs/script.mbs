SCRIPT_VER=8
MAX_CHANNELS=2

' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file

setconfig(_ECHOF, 1) ' Serial echo off (p195)
setconfig(_RWD, 110) ' Watchdog timeout, milliseconds (p195)
setconfig(_AMOD, 1, 0) ' Analog input 1 absolute mode
setconfig(_AMOD, 2, 0) ' Analog input 2 absolute mode

' Undervoltage/overvoltage limits (p214)
setconfig(_OVL, 140)
setconfig(_UVL, 90)

' Encoder, speed config (p208, p221)
setconfig(_EMOD, 1, 48)
setconfig(_MXRPM, 1, 3000)
setconfig(_EMOD, 2, 48)
setconfig(_MXRPM, 2, 3000)


' Current limit (p216)
setconfig(_ALIM, 1, 100)
setconfig(_ATGA, 1, 16)
setconfig(_ATGD, 1, 50)
setconfig(_ATRIG, 1, 0)

setconfig(_ALIM, 2, 100)
setconfig(_ATGA, 2, 32)
setconfig(_ATGD, 2, 50)
setconfig(_ATRIG, 2, 0)

' Max acceleration/deceleration (p219)
setconfig(_MAC, 1, 30000)
setconfig(_MDEC, 1, 30000)
setconfig(_MAC, 2, 30000)
setconfig(_MDEC, 2, 30000)

' Closed-loop control (p216-218)
setconfig(_MMOD, 1, 1)
etconfig(_KP, 1, 20)
setconfig(_KI, 1, 40)
setconfig(_KD, 1, 10)
setconfig(_ICAP, 1, 100)
setconfig(_CLERD, 1, 0)

setconfig(_MMOD, 2, 1)
etconfig(_KP, 2, 20)
setconfig(_KI, 2, 40)
setconfig(_KD, 2, 10)
setconfig(_ICAP, 2, 100)
setconfig(_CLERD, 2, 0)


top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
		if getvalue(_BOOL, ch) = 1 then
			GoSub PrintFeedback  ' 25 Hz
		end if
	next
	c++
	if c = 5 then
		GoSub PrintStatus  ' 5 Hz
		c = 0
	end if
	wait(19)
	goto top

PrintFeedback:
	print("&f:", ch)
	print(":", getvalue(_MOTAMPS, ch))
	print(":", getvalue(_MOTCMD, ch))
	print(":", getvalue(_MOTPWR, ch))
	print(":", getvalue(_ABSPEED, ch))
	print(":", getvalue(_ABCNTR, ch))
	print(":", getvalue(_VOLTS, 2))
	print(":", getvalue(_BATAMPS, ch))
	print(":", getvalue(_ANAIN, ch))
	print(":", getvalue(_TEMP, ch+1))
	print("\r")
	Return
	
PrintStatus:
	print("&s:", SCRIPT_VER)
	print(":", getvalue(_FLTFLAG))
	print(":", getvalue(_STFLAG))
	print(":", getvalue(_VOLTS, 1))
	print(":", getvalue(_VOLTS, 3))
	print(":", getvalue(_TEMP, 1))
	print("\r")
	Return
